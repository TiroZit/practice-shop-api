// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using practice_shop_api.Data;

#nullable disable

namespace practice_shop_api.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("practice_shop_api.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SexId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SexId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Верхняя одежда",
                            SexId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Джинсы и брюки",
                            SexId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Толстовки и свитеры",
                            SexId = 1
                        },
                        new
                        {
                            Id = 4,
                            Name = "Футболки и поло",
                            SexId = 1
                        },
                        new
                        {
                            Id = 5,
                            Name = "Верхняя одежда",
                            SexId = 2
                        },
                        new
                        {
                            Id = 6,
                            Name = "Платья и юбки",
                            SexId = 2
                        },
                        new
                        {
                            Id = 7,
                            Name = "Футболки и лонгсливы",
                            SexId = 2
                        });
                });

            modelBuilder.Entity("practice_shop_api.Models.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Colors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Коричневый",
                            Value = "967D69"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Голубой",
                            Value = "92B9BD"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Зеленый",
                            Value = "A8D4AD"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Желтый",
                            Value = "F9DB6D"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Белый",
                            Value = "F4EDED"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Серый",
                            Value = "7C7C7C"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Черный",
                            Value = "000"
                        });
                });

            modelBuilder.Entity("practice_shop_api.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ColorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Images")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int?>("SexId")
                        .HasColumnType("int");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SizeId")
                        .HasColumnType("int");

                    b.Property<int?>("SubCategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.HasIndex("SexId");

                    b.HasIndex("SizeId");

                    b.HasIndex("SubCategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 4921,
                            Color = "92B9BD",
                            Description = "Данная модель изготовлена в рамках экологического проекта BE PART с наименьшим потреблением воды и энергии. Мы хотим сохранить природные ресурсы и помочь экологической среде нашей любимой планеты. Становись частью более устойчивого мира моды вместе с нами. ",
                            Images = "https://upload-96d5e9c2a2fefe65127343db553761dc.storage.yandexcloud.net/iblock/3ec/3ec424de3f7e0e613f78fd67851a25a7/1037039_18395_1.jpg",
                            Name = "Футболка 2",
                            Price = 1999,
                            SexId = 2,
                            Size = "M",
                            SubCategoryId = 12
                        },
                        new
                        {
                            Id = 1234,
                            Color = "A8D4AD",
                            Description = "Данная модель изготовлена в рамках экологического проекта BE PART с наименьшим потреблением воды и энергии. Мы хотим сохранить природные ресурсы и помочь экологической среде нашей любимой планеты. Становись частью более устойчивого мира моды вместе с нами. ",
                            Images = "https://upload-96d5e9c2a2fefe65127343db553761dc.storage.yandexcloud.net/iblock/ee6/ee64195a4492cc765bfaa6119da51217/1037039_11052_1.jpg",
                            Name = "Футболка 1",
                            Price = 2999,
                            SexId = 2,
                            Size = "S",
                            SubCategoryId = 12
                        },
                        new
                        {
                            Id = 454,
                            Color = "F4EDED",
                            Description = "Данная модель изготовлена в рамках экологического проекта BE PART с наименьшим потреблением воды и энергии. Мы хотим сохранить природные ресурсы и помочь экологической среде нашей любимой планеты. Становись частью более устойчивого мира моды вместе с нами. ",
                            Images = "https://upload-96d5e9c2a2fefe65127343db553761dc.storage.yandexcloud.net/iblock/bc2/bc28e7519526032072f60b3bfaa610d0/1037039_10336_1.jpg",
                            Name = "Футболка 3",
                            Price = 4999,
                            SexId = 2,
                            Size = "L",
                            SubCategoryId = 12
                        },
                        new
                        {
                            Id = 456456,
                            Color = "92B9BD",
                            Description = "Джинсовая куртка женская - это универсальный предмет гардероба, не теряющий актуальность из сезона в сезон. Куртка джинсовая приталенного кроя защитит от ветра в прохладную погоду, а также будет уместна и теплым летним днем. Застежки на болтах смотрятся в классических традициях изделий из денима. Джинсовка выглядит оригинально благодаря контрастным манжетам с полосками. Два небольших накладных кармана имеют больше декоративную функцию, однако их можно использовать и для того, чтобы положить ключи или карту. Джинсовая куртка составит стильную пару джинсам в тон, любимой юбке, а также любым брюкам. Модель изготовлена из органического хлопка высокого качества.",
                            Images = "https://upload-96d5e9c2a2fefe65127343db553761dc.storage.yandexcloud.net/iblock/3f5/3f5304c250c2ec3923109e74089a40e5/1016402_10142_1.jpg",
                            Name = "Куртка 1",
                            Price = 7599,
                            SexId = 2,
                            Size = "M",
                            SubCategoryId = 9
                        },
                        new
                        {
                            Id = 49212134,
                            Color = "000",
                            Description = "Джинсовая куртка женская - это универсальный предмет гардероба, не теряющий актуальность из сезона в сезон. Куртка джинсовая приталенного кроя защитит от ветра в прохладную погоду, а также будет уместна и теплым летним днем. Застежки на болтах смотрятся в классических традициях изделий из денима. Джинсовка выглядит оригинально благодаря контрастным манжетам с полосками. Два небольших накладных кармана имеют больше декоративную функцию, однако их можно использовать и для того, чтобы положить ключи или карту. Джинсовая куртка составит стильную пару джинсам в тон, любимой юбке, а также любым брюкам. Модель изготовлена из органического хлопка высокого качества.",
                            Images = "https://upload-96d5e9c2a2fefe65127343db553761dc.storage.yandexcloud.net/iblock/e30/e3074e5662bc0dc63afc583aacb349ba/1016402_10120_1.jpeg",
                            Name = "Куртка 2",
                            Price = 5599,
                            SexId = 2,
                            Size = "L",
                            SubCategoryId = 9
                        },
                        new
                        {
                            Id = 492113,
                            Color = "000",
                            Description = "",
                            Images = "https://upload-96d5e9c2a2fefe65127343db553761dc.storage.yandexcloud.net/iblock/fcc/fcca1fb28ae94b78704110e800170581/1030959_10668_3.jpg",
                            Name = "ПЛАТЬЕ 2",
                            Price = 3599,
                            SexId = 2,
                            Size = "L",
                            SubCategoryId = 10
                        },
                        new
                        {
                            Id = 49232451,
                            Color = "F4EDED",
                            Description = "",
                            Images = "https://upload-96d5e9c2a2fefe65127343db553761dc.storage.yandexcloud.net/iblock/6c1/6c15ce85bdeb1e5492d8fc12d768be11/1030959_11486_3.jpg",
                            Name = "ПЛАТЬЕ 1",
                            Price = 2999,
                            SexId = 2,
                            Size = "M",
                            SubCategoryId = 10
                        },
                        new
                        {
                            Id = 492169,
                            Color = "92B9BD",
                            Description = "",
                            Images = "https://upload-96d5e9c2a2fefe65127343db553761dc.storage.yandexcloud.net/iblock/065/0651fc2c53e910aadef89048ac54fc32/1037113_10113_1.jpg",
                            Name = "Свободные джинсы прямого кроя 90's straight",
                            Price = 5599,
                            SexId = 1,
                            Size = "M",
                            SubCategoryId = 4
                        },
                        new
                        {
                            Id = 49215,
                            Color = "000",
                            Description = "Без хороших базовых или однотонный джинсов не обойтись никак. Это основа буквально для каждого повседневного аутфита. Troy Slim – это классическая база джинсовой коллекции Tom Tailor, повторяющаяся из года в год. ",
                            Images = "https://upload-96d5e9c2a2fefe65127343db553761dc.storage.yandexcloud.net/iblock/b31/b31c11d04461b702bdf524d6d7db96cc/1.jpg",
                            Name = "Классические прямые джинсы облегающeго кроя Troy Slim",
                            Price = 6599,
                            SexId = 1,
                            Size = "M",
                            SubCategoryId = 4
                        });
                });

            modelBuilder.Entity("practice_shop_api.Models.Sex", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sexs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Мужчинам"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Женщинам"
                        });
                });

            modelBuilder.Entity("practice_shop_api.Models.Size", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sizes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "XXS"
                        },
                        new
                        {
                            Id = 2,
                            Name = "XS"
                        },
                        new
                        {
                            Id = 3,
                            Name = "S"
                        },
                        new
                        {
                            Id = 4,
                            Name = "M"
                        },
                        new
                        {
                            Id = 5,
                            Name = "L"
                        },
                        new
                        {
                            Id = 6,
                            Name = "XL"
                        },
                        new
                        {
                            Id = 7,
                            Name = "XXL"
                        },
                        new
                        {
                            Id = 8,
                            Name = "XXXL"
                        });
                });

            modelBuilder.Entity("practice_shop_api.Models.SubCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("SubCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Name = "Куртки",
                            Value = "jackets"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Name = "Жилеты",
                            Value = "vests"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            Name = "Шорты",
                            Value = "shorts"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            Name = "Джинсы",
                            Value = "jeans"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 3,
                            Name = "Свитшоты",
                            Value = "sweatshirts"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 3,
                            Name = "Толстовки и худи",
                            Value = "sweatshirts-and-hoodies"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 4,
                            Name = "Футболки",
                            Value = "t-shirts"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 4,
                            Name = "Поло",
                            Value = "polo"
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 5,
                            Name = "Джинсовые куртки",
                            Value = "denim-jackets"
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 6,
                            Name = "Платья",
                            Value = "dresses"
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 6,
                            Name = "Юбки",
                            Value = "skirts"
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 7,
                            Name = "Футболки и топы",
                            Value = "t-shirts"
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 7,
                            Name = "Лонгсливы",
                            Value = "longshirts"
                        });
                });

            modelBuilder.Entity("practice_shop_api.Models.Category", b =>
                {
                    b.HasOne("practice_shop_api.Models.Sex", "Sex")
                        .WithMany("Categories")
                        .HasForeignKey("SexId");

                    b.Navigation("Sex");
                });

            modelBuilder.Entity("practice_shop_api.Models.Product", b =>
                {
                    b.HasOne("practice_shop_api.Models.Color", "Colors")
                        .WithMany("Products")
                        .HasForeignKey("ColorId");

                    b.HasOne("practice_shop_api.Models.Sex", "Sex")
                        .WithMany()
                        .HasForeignKey("SexId");

                    b.HasOne("practice_shop_api.Models.Size", "Sizes")
                        .WithMany("Products")
                        .HasForeignKey("SizeId");

                    b.HasOne("practice_shop_api.Models.SubCategory", "SubCategory")
                        .WithMany("Products")
                        .HasForeignKey("SubCategoryId");

                    b.Navigation("Colors");

                    b.Navigation("Sex");

                    b.Navigation("Sizes");

                    b.Navigation("SubCategory");
                });

            modelBuilder.Entity("practice_shop_api.Models.SubCategory", b =>
                {
                    b.HasOne("practice_shop_api.Models.Category", "Category")
                        .WithMany("SubCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("practice_shop_api.Models.Category", b =>
                {
                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("practice_shop_api.Models.Color", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("practice_shop_api.Models.Sex", b =>
                {
                    b.Navigation("Categories");
                });

            modelBuilder.Entity("practice_shop_api.Models.Size", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("practice_shop_api.Models.SubCategory", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
